<!--
/* ***** BEGIN LICENCE BLOCK *****
 * Version: CePL 1.1
 * 
 * The contents of this file are subject to the Celtx Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.celtx.com/CePL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
 * the License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is Celtx Script Manager.
 * 
 * The Initial Developer of the Original Code is Chad House and 4067479
 * Canada Inc. t/a CELTX.
 * 
 * Portions created by Chad House are Copyright (C) 2000-2004 Chad House,
 * parts created by Celtx are Copyright (C) 4067479 Canada Inc. All Rights
 * Reserved.
 * 
 * Contributor(s):
 *
 ***** END LICENCE BLOCK ***** */
-->

<!DOCTYPE stylesheet [
<!ENTITY % celtxDTD SYSTEM "chrome://celtx/locale/celtx.dtd" >
%celtxDTD;
]>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	        version="1.0">

<xsl:output method="html"/>

<xsl:template match="project">
  <html>
    <head>
      <title><xsl:value-of select="@title"/></title>
      <link rel="stylesheet" type="text/css"
            href="chrome://celtx/content/report.css"/>
    </head>
    <body>
      <xsl:call-template name="controls"/>
      <h1><xsl:value-of select="@title"/></h1>
      <h3><xsl:value-of select="@description"/></h3>
      <xsl:apply-templates select="scenes"/>
    </body>
  </html>
</xsl:template>


<xsl:template match="scenes">
  <xsl:apply-templates select="scene"/>
</xsl:template>


<xsl:template match="scene">
  <h2>
    <xsl:value-of select="@title"/>
    <xsl:if test="@location != ''">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="@location"/>
    </xsl:if>
  </h2>
  <xsl:if test="@description != ''">
    <p><em><xsl:value-of select="@description"/></em></p>
  </xsl:if>
  <xsl:apply-templates select="depictions"/>
  <xsl:apply-templates select="resources"/>
</xsl:template>

<!-- TODO: i18n of labels -->
<xsl:template match="resources">
  
  <xsl:call-template name="category">
    <xsl:with-param name="label">&sound.label;</xsl:with-param>
    <xsl:with-param name="items"
                select="resource[@type='http://celtx.com/NS/v1/Sound']"/>
  </xsl:call-template>
  
</xsl:template>


<xsl:template name="category">
  <xsl:param name="label"/>
  <xsl:param name="items"/>

  <xsl:if test="count($items) != 0">
    <h3><xsl:value-of select="$label"/></h3>

    <ul>
      <xsl:for-each select="$items">
        <li><xsl:value-of select="@title"/>
          <xsl:if test="@description != ''">
            - <em><xsl:value-of select="@description"/></em>
          </xsl:if>
          <xsl:apply-templates/>
        </li>
      </xsl:for-each>
    </ul>
  </xsl:if>

</xsl:template>

<xsl:template name="controls">
  <div class="controls">
    <button onclick="window.print()">&report.print;</button>
    <button onclick="window.close()">&report.close;</button>
  </div>
</xsl:template>

<xsl:template match="depictions">
  <br/>
  <p>
    <xsl:apply-templates/>
  </p>
</xsl:template>

<xsl:template match="image">
  <img class="depiction" src="{@src}"/>
</xsl:template>

</xsl:stylesheet>
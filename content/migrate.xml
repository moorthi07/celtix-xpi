<?xml version="1.0"?>

<!--
/* ***** BEGIN LICENCE BLOCK *****
 * Version: CePL 1.1
 * 
 * The contents of this file are subject to the Celtx Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.celtx.com/CePL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
 * the License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is Celtx Script Manager.
 * 
 * The Initial Developer of the Original Code is Chad House and 4067479
 * Canada Inc. t/a CELTX.
 * 
 * Portions created by Chad House are Copyright (C) 2000-2004 Chad House,
 * parts created by Celtx are Copyright (C) 4067479 Canada Inc. All Rights
 * Reserved.
 * 
 * Contributor(s):
 *
 ***** END LICENCE BLOCK ***** */
-->

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="xml"/>

  <xsl:template match="scriptdoc">
    <html>
      <head>
        <title>Imported Script</title>
         <link rel="stylesheet" type="text/css"
               href="chrome://celtx/content/script.css" />
      </head>
      <body>
        <xsl:apply-templates/>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="scene">
    <div class="scene">
      <xsl:if test="@ref">
        <xsl:attribute name="ref"><xsl:value-of select="@ref"/></xsl:attribute>
      </xsl:if>
      <xsl:attribute name="label">
        <xsl:value-of select="position()"/>
      </xsl:attribute>
      <xsl:apply-templates/>
    </div>
  </xsl:template>

  <xsl:template match="sceneheading">
    <p class="sceneheading">
      <xsl:if test="@note">
        <xsl:attribute name="note"><xsl:value-of select="@note"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="action">
    <p class="action">
      <xsl:if test="@note">
        <xsl:attribute name="note"><xsl:value-of select="@note"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="transition">
    <p class="transition">
      <xsl:if test="@note">
        <xsl:attribute name="note"><xsl:value-of select="@note"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="shot">
    <p class="shot">
      <xsl:if test="@note">
        <xsl:attribute name="note"><xsl:value-of select="@note"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="dialog">
    <xsl:apply-templates select="character"/>
    <xsl:apply-templates select="dialogtext/parenthetical"/>
    <xsl:apply-templates select="dialogtext"/>
  </xsl:template>

  <xsl:template match="character">
    <p class="character">
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="dialogtext">
    <p class="dialog">
      <xsl:if test="@note">
        <xsl:attribute name="note"><xsl:value-of select="@note"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates select="text()|*[name() != 'parenthetical']"/>
    </p>
  </xsl:template>

  <xsl:template match="parenthetical">
    <p class="parenthetical">
      <xsl:apply-templates/>
    </p>
  </xsl:template>

  <xsl:template match="prop|char|set|extra|camera|sound|light|wardrobe">
    <span>
      <xsl:attribute name="class"><xsl:value-of select="name()"/></xsl:attribute>
      <xsl:if test="@ref">
        <xsl:attribute name="ref"><xsl:value-of select="@ref"/></xsl:attribute>
      </xsl:if>
      <xsl:apply-templates/>
    </span>
  </xsl:template>

  <xsl:template match="note">
    <span class="note" id="{@id}" text="{@text}"/>
  </xsl:template>

</xsl:stylesheet>